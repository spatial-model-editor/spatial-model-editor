name: Python Wheel Builds

on:
  push:
    branches:
      - main
    tags:
      - "*.*.*"
  pull_request:
  workflow_dispatch:

concurrency:
  group: wheels-${{ github.ref }}
  cancel-in-progress: true

jobs:
  wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: "ubuntu-latest"
            shell: "bash"
          - os: "macos-13"
            shell: "bash"
          - os: "macos-14"
            shell: "bash"
          - os: "windows-2022"
            shell: "msys2 {0}"
    defaults:
      run:
        shell: ${{ matrix.shell }}
    env:
      CIBUILDWHEEL_VERSION: "2.17.0"
    steps:
    - uses: spatial-model-editor/setup-ci@2024.04.23
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Set "latest" version number unless commit is tagged
      if: startsWith(github.event.ref, 'refs/tags/') == false
      run: ./ci/set-latest-version.sh ${GITHUB_SHA}
    - run: ./ci/wheels-${{ runner.os }}.sh
      if: runner.os != 'Linux'
    - run: python -m pip install cibuildwheel==$CIBUILDWHEEL_VERSION && python -m cibuildwheel
    - uses: actions/upload-artifact@v4
      with:
        name: artifacts-wheels-${{ matrix.os }}
        path: ./wheelhouse/*.whl

  sdist:
    name: Source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: artifacts-sdist
          path: dist/*.tar.gz

  pypi:
    name: Upload to PyPI / Github Release
    if: github.repository == 'spatial-model-editor/spatial-model-editor' && github.event_name == 'push' && (startsWith(github.event.ref, 'refs/tags/') || github.ref == 'refs/heads/main')
    needs: [wheels, sdist]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: artifacts-*
          merge-multiple: true
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        # if this is a tagged commit, upload pypi wheels
        if: startsWith(github.event.ref, 'refs/tags/')
        with:
          verbose: true
      - run: |
          mkdir latest
          mv dist/sme-*-cp311-cp311-manylinux_2_28_x86_64.whl latest/sme-latest-cp311-cp311-manylinux_2_28_x86_64.whl
      - uses: svenstaro/upload-release-action@v2
        # if this is an untagged commit to main: upload selected wheels to github latest release
        if: github.ref == 'refs/heads/main'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: latest/*
          tag: latest
          overwrite: true
          file_glob: true
          prerelease: true
